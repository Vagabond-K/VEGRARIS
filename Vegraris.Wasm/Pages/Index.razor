@page "/"
@inject IJSRuntime JS
@inject PieceDrawingFactory PieceDrawingFactory
@inject ColorConverter ColorConverter

<PageTitle>Vegraris</PageTitle>
<div style="width: 100%;height: 100%; position: absolute;top: 50%;left: 50%;transform: translate(-50%, -50%);display: flex;flex-direction: column;align-items: center;">
    <svg viewBox="0,0,1004,888" style="width: 100%;height: 100%;">
        <defs>
            <filter id="blur" x="-20%" y="-20%" width="140%" height="140%">
                <feGaussianBlur stdDeviation="2.5" />
            </filter>
            <linearGradient id="dropTraceOpMask" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0%" stop-color="transparent" />
                <stop offset="100%" stop-color="white" />
            </linearGradient>
        </defs>
        <foreignObject width="1004" height="888">
            <div xmlns="http://www.w3.org/1999/xhtml" style="height: 888px;display: flex;justify-content: center;align-items: center;flex-direction: row;font-size: 16px;">
                <div style="height: 848px;display: flex;">
                    <div class="side">
                        <NeonPanel HeaderText="HOLD" Style="height: 200px;">
                            <Content>
                                @if (!game.Paused)
                                {
                                    if (game.HoldingPiece != null)
                                    {
                                        <StaticPieceView Piece="game.HoldingPiece" />
                                    }
                                    else
                                    {
                                        <span style="font-size: 20px">EMPTY</span>
                                    }
                                }
                            </Content>
                        </NeonPanel>
                        <div class="indicators">
                            <SharedDigitalFontSegments DigitalFont="sevenSegmentFont" />
                            <NeonPanel HeaderText="SCORE">
                                <Content>
                                    <DigitalNumber Value="game.Score" DigitalFont="sevenSegmentFont" IntegerDigits="7" UseSharedSegments="true" />
                                </Content>
                            </NeonPanel>
                            <NeonPanel HeaderText="LEVEL">
                                <Content>
                                    <DigitalNumber Value="game.Level" DigitalFont="sevenSegmentFont" IntegerDigits="7" UseSharedSegments="true" />
                                </Content>
                            </NeonPanel>
                            <NeonPanel HeaderText="LINES">
                                <Content>
                                    <DigitalNumber Value="game.Lines" DigitalFont="sevenSegmentFont" IntegerDigits="7" UseSharedSegments="true" />
                                </Content>
                            </NeonPanel>
                        </div>
                    </div>
                    <NeonPanel Style="width: 404px;">
                        <Content>
                            <svg viewBox="-2,-2,404,804">
                                <defs>
                                    <g id="gameArea">
                                        @foreach (var item in game.LockedPieces)
                                        {
                                            if (item?.Path != null)
                                            {
                                                <path d="@PieceDrawingFactory.Create(item.Path)" style="color:@ColorConverter.ToColor(item.Tetromino)">
                                                    @if (item.Clearing)
                                                    {
                                                        <animate attributeName="opacity" values="0.7;0;0.7" dur="66ms" repeatCount="indefinite" />
                                                    }
                                                </path>
                                            }
                                        }
                                        @if (@game.ActivePiece?.Path != null)
                                        {
                                            <path d="@PieceDrawingFactory.Create(game.ActivePiece.Path)" style="color:@ColorConverter.ToColor(game.ActivePiece.Tetromino)">
                                                @if (game.ActivePiece?.LockingDown == true)
                                                {
                                                    <animateTransform attributeType="XML" attributeName="transform" type="translate" values="-1.0 0;1.0 0;-1.0 0" begin="0ms" dur="100ms" repeatCount="indefinite" />
                                                }
                                            </path>
                                        }
                                    </g>
                                </defs>
                                @foreach (var item in game.DropTraces)
                                {
                                    <DropTraceView DropTrace="item" />
                                }

                                @if (!game.Paused)
                                {
                                    <use href="#gameArea" filter="url(#blur)" class="piece-blur" />
                                    @if (@game.ActivePiece?.GhostPath != null)
                                    {
                                        <path d="@PieceDrawingFactory.Create(game.ActivePiece.GhostPath)" style="fill:transparent; stroke:gray; stroke-width:1;" />
                                    }
                                    <use href="#gameArea" class="piece-tint" />
                                    <use href="#gameArea" class="piece-border" />
                                }
                            </svg>
                        </Content>
                    </NeonPanel>
                    <div class="side">
                        <NeonPanel HeaderText="NEXT" Style="height: 500px;">
                            <Content>
                                @if (!game.Paused)
                                {
                                    @foreach (var item in game.Previews)
                                    {
                                        <div style="display:flex;flex-direction: column;justify-content: center;height: 140px;">
                                            <StaticPieceView Piece="item" />
                                        </div>
                                    }
                                }
                            </Content>
                        </NeonPanel>
                        <div class="buttons" style="display: grid;">
                            @if (!game.Playing)
                            {
                                <button @onclick=Play disabled="@(isReady)">PLAY</button>
                            }
                            else if (!game.Paused)
                            {
                                <button @onclick=game.Pause>PAUSE</button>
                            }
                            else
                            {
                                <button @onclick=game.Resume>RESUME</button>
                            }
                            <button onclick="window.open('https://github.com/Vagabond-K/VEGRARIS','_blank')" style="display:flex;justify-content: center; margin-top:0px;padding: 26px 20px 20px 20px;">
                                <svg style="margin-right: 6px;" width="24px" height="24px" focusable="false" viewBox="0 0 24 24" aria-hidden="true" role="img">
                                    <path style="fill:currentColor;" d="M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3"></path>
                                </svg>
                                Repository
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </foreignObject>
        <foreignObject x="300" y="40" width="404" height="808">
            <div xmlns="http://www.w3.org/1999/xhtml" style="height: 808px;display: flex;justify-content: center;align-items: center;flex-direction: row;font-size: 16px;">
                @if (!isReady && !game.Playing)
                {
                    <NeonPanel HeaderText="How to Play">
                        <Content>
                            <div style="margin:6px 24px">
                                <p><span class="label">Shift:</span> ← or →</p>
                                <p><span class="label">Rotate CW:</span> ↑</p>
                                <p><span class="label">Soft drop:</span> ↓</p>
                                <p><span class="label">Hard drop:</span> Space or R-Shift </p>
                                <p><span class="label">Hold:</span> L-Shift or C</p>
                                <p><span class="label">Rotate CCW:</span> L-Ctrl or Z</p>
                            </div>
                        </Content>
                    </NeonPanel>
                }
                @if (game.Paused)
                {
                    <div style="display:grid">
                        <span style="font-size: 40px">
                            - PAUSED -
                        </span>
                        <button @onclick=game.Quit>QUIT</button>
                    </div>
                }
                @if (isReady)
                {
                    <div style="font-size: 40px">
                        READY?
                    </div>
                }
            </div>
        </foreignObject>
    </svg>
    <div class="game-controller">
        <GameButton GameButtonStateChanged="OnRotateCCW">
            <Content>
                <svg viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"/><path d="M7.11 8.53L5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z"/></svg>
            </Content>
        </GameButton>
        <GameButton Style="grid-column: 2 / 4;" GameButtonStateChanged="OnRotateCW">
            <Content>
                <svg viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"/><path d="M15.55 5.55L11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10l4.55-4.45zM19.93 11c-.17-1.39-.72-2.73-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47h2.02zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03zm3.89-2.42l1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48z"/></svg>
            </Content>
        </GameButton>
        <GameButton GameButtonStateChanged="OnShiftLeft">
            <Content>
                <svg viewBox="0 0 24 24"><path d="M14 7l-5 5 5 5V7z"/><path d="M24 0v24H0V0h24z" fill="none"/></svg>
            </Content>
        </GameButton>
        <GameButton GameButtonStateChanged="OnSoftDrop">
            <Content>
                <svg viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"/><path d="M7 10l5 5 5-5z"/></svg>
            </Content>
        </GameButton>
        <GameButton GameButtonStateChanged="OnShiftRight">
            <Content>
                <svg viewBox="0 0 24 24"><path d="M10 17l5-5-5-5v10z"/><path d="M0 24V0h24v24H0z" fill="none"/></svg>
            </Content>
        </GameButton>
        <GameButton GameButtonStateChanged="OnHold">
            <Content>
                <svg viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"/><path d="M19 4H5c-1.11 0-2 .9-2 2v12c0 1.1.89 2 2 2h4v-2H5V8h14v10h-4v2h4c1.1 0 2-.9 2-2V6c0-1.1-.89-2-2-2zm-7 6l-4 4h3v6h2v-6h3l-4-4z"/></svg>
            </Content>
        </GameButton>
        <GameButton Style="grid-column: 2 / 4;" GameButtonStateChanged="OnHardDrop">
            <Content>
                <svg viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"/><path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"/></svg>
            </Content>
        </GameButton>
    </div>
</div>
