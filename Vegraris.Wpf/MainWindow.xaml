<Window
    x:Class="Vegraris.Wpf.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vgt="clr-namespace:Vegraris;assembly=Vegraris.Core"
    xmlns:vgtp="clr-namespace:Vegraris.Palettes;assembly=Vegraris.Core"
    xmlns:vgtt="clr-namespace:Vegraris.Tracing;assembly=Vegraris.Core"
    xmlns:vki="http://schemas.vagabond-k.com/winfx/2016/xaml/indicators"
    xmlns:vkid="clr-namespace:VagabondK.Indicators.DigitalFonts;assembly=VagabondK.Indicators"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:cvt="clr-namespace:Vegraris.Wpf.Converters"
    xmlns:local="clr-namespace:Vegraris.Wpf"
    mc:Ignorable="d"
    Title="Vegraris" Height="930" Width="1000"
    Foreground="White"
    WindowStartupLocation="CenterScreen"
    Icon="pack://application:,,,/Vegraris;component/Images/Icon.png"
    d:DataContext="{d:DesignInstance Type=local:MainViewModel, IsDesignTimeCreatable=True}"
    local:Theme.Source="{Binding ElementName=theme, Path=SelectedValue}">
    <Window.Resources>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
    </Window.Resources>
    <Window.Background>
        <ImageBrush ImageSource="/Images/background.jpg" Stretch="UniformToFill"/>
    </Window.Background>

    <Viewbox x:Name="root" StretchDirection="DownOnly" TextBlock.FontFamily="#Recipekorea">
        <Grid Margin="10" Grid.IsSharedSizeScope="True">
            <Grid.Resources>
                <cvt:BooleanToVisibilityConverter x:Key="BooleanToHiddenConverter" HiddenInsteadOfCollapsed="True"/>
                <Style x:Key="HideInPause" TargetType="FrameworkElement">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Paused}" Value="True">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="SideArea"/>
                <ColumnDefinition/>
                <ColumnDefinition SharedSizeGroup="SideArea"/>
            </Grid.ColumnDefinitions>
            
            <Grid DataContext="{Binding Game}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2.5*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <GroupBox Header="NEXT">
                    <Border Style="{StaticResource HideInPause}">
                        <ItemsControl ItemsSource="{Binding Previews}"
                                  ItemTemplate="{DynamicResource StaticPieceTemplate}"
                                  Style="{DynamicResource LeftSideStyle}" Focusable="False">
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="{x:Type ContentPresenter}">
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="3" Columns="1"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Border>
                </GroupBox>

                <GroupBox Header="HOLD" Grid.Row="1">
                    <Border Style="{DynamicResource LeftSideStyle}">
                        <Grid Style="{StaticResource HideInPause}">
                            <ContentPresenter
                                Content="{Binding HoldingPiece}"
                                ContentTemplate="{DynamicResource StaticPieceTemplate}"
                                HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <TextBlock Text="EMPTY" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontSize="20">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HoldingPiece}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                </GroupBox>
            </Grid>

            <ContentControl Grid.Column="1" Style="{StaticResource GamingAreaBorder}">
                <Grid ClipToBounds="True">
                    <Rectangle Opacity="0.5" Fill="{DynamicResource GamingAreaBrush}">
                        <Rectangle.CacheMode>
                            <BitmapCache/>
                        </Rectangle.CacheMode>
                    </Rectangle>
                    <Grid Style="{StaticResource HideInPause}" DataContext="{Binding Game}">
                        <ContentPresenter Style="{DynamicResource GamingArea}" Content="{Binding}"/>
                    </Grid>
                </Grid>
            </ContentControl>
            
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="3*"/>
                </Grid.RowDefinitions>
                <GroupBox Header="SCORE">
                    <vki:DigitalNumber Value="{Binding Game.Score}"/>
                </GroupBox>
                <GroupBox Grid.Row="1" Header="LEVEL">
                    <vki:DigitalNumber Value="{Binding Game.Level}"/>
                </GroupBox>
                <GroupBox Grid.Row="2" Header="LINES">
                    <vki:DigitalNumber Value="{Binding Game.Lines}"/>
                </GroupBox>
                <Button Grid.Row="3" Content="PLAY" Command="{Binding PlayCommand}"/>
                <Button Grid.Row="3" Content="PAUSE" Command="{Binding PauseCommand}"
                        Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BooleanToHiddenConverter}}"/>
                <Button Grid.Row="3" Content="RESUME" Command="{Binding ResumeCommand}"
                        Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource BooleanToHiddenConverter}}"/>
                <GroupBox Grid.Row="4" Header="THEME" Focusable="False">
                    <ListBox x:Name="theme" SelectedIndex="0" DisplayMemberPath="Text" SelectedValuePath="Tag" Focusable="False"
                             SelectionMode="Single" VerticalAlignment="Stretch" FontSize="14">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Focusable="False" Columns="1"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <TextBlock Text="Simple"/>
                        <TextBlock Text="Squares" Tag="/Themes/Squares.xaml"/>
                        <TextBlock Text="Arcade" Tag="/Themes/Arcade.xaml"/>
                        <TextBlock Text="Grayscale" Tag="/Themes/Grayscale.xaml"/>
                        <TextBlock Text="Candy Cane" Tag="/Themes/CandyCane.xaml"/>
                        <TextBlock Text="Neon Sign" Tag="/Themes/NeonSign.xaml"/>
                    </ListBox>
                </GroupBox>
            </Grid>

            <TextBlock Grid.ColumnSpan="3" FontSize="40" Text="READY?" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock.Style>
                    <Style TargetType="FrameworkElement">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsReady}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <Grid Grid.ColumnSpan="3">
                <Grid.Style>
                    <Style TargetType="FrameworkElement">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Game.Paused}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <TextBlock FontSize="40" Text="- PAUSED -" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="FrameworkElement">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Game.Paused}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever" AutoReverse="True">
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.3" Duration="0:0:0.5"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Button Content="QUIT" Command="{Binding QuitCommand}" Margin="40" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
            </Grid>

            <Border Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Border.Style>
                    <Style TargetType="FrameworkElement">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsReady}" Value="False"/>
                                    <Condition Binding="{Binding Game.Playing}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <GroupBox Header="How to Play" Background="#D0000000">
                    <TextBlock FontSize="20" LineHeight="40" Margin="20,20,20,0">
                    <Run Style="{StaticResource Label}">Shift:</Run> ← or →<LineBreak/>
                    <Run Style="{StaticResource Label}">Rotate CW:</Run> ↑<LineBreak/>
                    <Run Style="{StaticResource Label}">Soft drop:</Run> ↓<LineBreak/>
                    <Run Style="{StaticResource Label}">Hard drop:</Run> Space bar<LineBreak/>
                    <Run Style="{StaticResource Label}">Hold:</Run> Shift or C<LineBreak/>
                    <Run Style="{StaticResource Label}">Rotate CCW:</Run> Left Ctrl or Z
                    </TextBlock>
                </GroupBox>
            </Border>
        </Grid>
    </Viewbox>
</Window>
